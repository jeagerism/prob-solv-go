// หาผลคูณของตัวเลขในอาเรย์ (ยกเว้นตำแหน่งนั้นเอง)
// คำอธิบาย:
// เขียนฟังก์ชันที่รับอาเรย์ของตัวเลข แล้วคืนค่าอาเรย์ใหม่ที่ตำแหน่งแต่ละตัวเลขจะเป็น ผลคูณของตัวเลขทุกตัวในอาเรย์ ยกเว้นตัวเลขที่ตำแหน่งนั้นเอง

// ตัวอย่าง Input:
// []int{1, 2, 3, 4}
// Output ที่คาดหวัง:
// []int{24, 12, 8, 6}

// Tips:
// ใช้การคูณผลรวมทั้งหมดก่อน และหารด้วยค่าที่ตำแหน่งนั้น (ถ้าไม่มีตัวเลขเป็น 0)
// หรือใช้สองอาเรย์ (ซ้ายไปขวา และขวาไปซ้าย) เพื่อคำนวณอย่างมีประสิทธิภาพ

package main

import "fmt"

func main() {
	input := []int{1, 2, 3, 4}

	mul(input)
}

func mul(a []int) {
	n := len(a)
	output := []int{}
	for i := 0; i < n; i++ {
		l := a[:i]
		r := a[i+1:]
		fmt.Println(l, r)
		sum := 1
		for _, v := range r {
			sum *= v
		}

		for _, v := range l {
			sum *= v
		}
		output = append(output, sum)
	}
	fmt.Println(output)
}
